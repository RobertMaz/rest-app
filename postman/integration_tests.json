{
  "info": {
    "_postman_id": "b48218a1-e732-4995-b25e-2d84a314abdc",
    "name": "Users",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Users",
      "item": [
        {
          "name": "createUser",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('createUser', () => {\r",
                  "    pm.response.to.have.status(201)\r",
                  "\r",
                  "    const request = JSON.parse(pm.request.body)\r",
                  "    pm.expect(request).to.not.empty;\r",
                  "    pm.collectionVariables.set(\"email\", request.email)\r",
                  "\r",
                  "    const location = pm.response.headers.get(\"Location\")\r",
                  "    pm.expect(location).to.not.empty;\r",
                  "    var userId = location.split(\"/\").pop()\r",
                  "    pm.collectionVariables.set(\"userId\", Number(userId))\r",
                  "    pm.collectionVariables.set(\"name\", request.name)\r",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "password",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "user",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{$randomFirstName}}\",\r\n    \"age\": 21,\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"profile\": {\r\n        \"cash\": {{$randomInt}}\r\n    },\r\n    \"phones\": [\r\n        {\r\n            \"value\": \"{{$randomPhoneNumber}}\"\r\n        }\r\n    ]\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users"
              ]
            }
          },
          "response": []
        },
        {
          "name": "getCreatedUser",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('get user', () => {\r",
                  "    pm.response.to.have.status(200)\r",
                  "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
                  "    \r",
                  "    const response = pm.response.json();\r",
                  "    pm.expect(response.id).to.eq(pm.collectionVariables.get('userId'))\r",
                  "    pm.expect(response.email).to.eq(pm.collectionVariables.get('email'))\r",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{userId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "updateEmailReject",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Reject to update user email and name', () => {\r",
                  "    pm.response.to.have.status(400)\r",
                  "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
                  "\r",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{$randomFirstName}}\",\r\n    \"age\": 21,\r\n    \"email\": \"{{$randomEmail}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{userId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "updateEmailSuccess",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('update user email', () => {\r",
                  "    pm.response.to.have.status(200)\r",
                  "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
                  "    \r",
                  "    const request = JSON.parse(pm.request.body)\r",
                  "    pm.collectionVariables.set(\"email\", request.email)\r",
                  "    \r",
                  "    const response = pm.response.json();\r",
                  "    pm.expect(response.id).to.eq(pm.collectionVariables.get('userId'))\r",
                  "    pm.expect(response.email).to.eq(request.email)\r",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"age\": 21,\r\n    \"email\": \"{{$randomEmail}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{userId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "[Remove Person from Department] /api/v1/departments/:departmentId/:personId Copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('remove user', () => {",
                  "    pm.response.to.have.status(204)",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{userId}}"
                }
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "email",
      "value": ""
    },
    {
      "key": "profileCashe",
      "value": ""
    },
    {
      "key": "departmentId",
      "value": ""
    },
    {
      "key": "userId",
      "value": ""
    },
    {
      "key": "name",
      "value": ""
    }
  ]
}